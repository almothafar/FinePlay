# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

POST	/development/http/ajax						apis.development.http.Http.ajaxdata()

POST	/system/log									apis.system.Logger.log()
POST	/system/pdf									apis.system.PDF.index()

GET		/companies									apis.company.Company.companies(name: String, page:Int ?=0, size:Int ?=100)
GET		/company/organizationunits					apis.company.organization.Organization.organizationUnits(companyId: Long, name: String, page:Int ?=0, size:Int ?=100)

GET		/translate									apis.transrator.Transrator.translate(from: String ?=null, to: String, text:String)

GET		/character									apis.character.Character.character(type: String ?="CHARACTER", text:String ?="")

GET		/test										controllers.test.Test.index()

GET		/											controllers.user.User.index()
POST	/signin										controllers.user.User.signIn()
GET		/signout									controllers.user.User.signOut()
POST	/confirm									controllers.user.User.confirm()

GET		/inquiry									controllers.inquiry.Inquiry.index()

GET		/registuser									controllers.registuser.RegistUser.index()
POST	/registuser/apply							controllers.registuser.RegistUser.apply()
GET		/registuser/provisional/htmlmail			controllers.registuser.RegistUser.provisionalHtmlMail(code:String ?="en-US")
GET		/registuser/regular/htmlmail				controllers.registuser.RegistUser.regularHtmlMail(code:String ?="en-US")
GET		/registuser/regular/:code					controllers.registuser.RegistUser.regular(code:String)

GET		/resetuser									controllers.resetuser.ResetUser.index()
POST	/resetuser/apply							controllers.resetuser.ResetUser.apply()
GET		/resetuser/request/htmlmail					controllers.resetuser.ResetUser.requestHtmlMail(code:String ?="en-US")
GET		/resetuser/owner/:code						controllers.resetuser.ResetUser.owner(code:String)
GET		/resetuser/change/htmlmail					controllers.resetuser.ResetUser.changeHtmlMail(code:String ?="en-US")
POST	/resetuser/change							controllers.resetuser.ResetUser.change()

GET		/inquiry									controllers.inquiry.Inquiry.index()
POST	/inquiry/send								controllers.inquiry.Inquiry.send()

GET		/home										controllers.home.Home.index()
GET		/home/video									controllers.home.Home.video()

GET		/setting									controllers.setting.system.System.index(item:String ?="general")
GET		/setting/system								controllers.setting.system.System.index(item:String ?="general")
GET		/setting/user								controllers.setting.user.User.index()
POST	/setting/user/update						controllers.setting.user.User.update()
GET		/setting/user/changeuser					controllers.setting.user.ChangeUser.index()
POST	/setting/user/changeuser/apply				controllers.setting.user.ChangeUser.apply()
GET		/setting/user/changeuser/reserve/htmlmail	controllers.setting.user.ChangeUser.reserveHtmlMail(code:String ?="en-US")
GET		/setting/user/changeuser/decision/htmlmail	controllers.setting.user.ChangeUser.decisionHtmlMail(code:String ?="en-US")
GET		/setting/user/changeuser/decision/:code		controllers.setting.user.ChangeUser.decision(code:String)

GET		/information								controllers.information.Information.creator()
GET		/information/creator						controllers.information.Information.creator()
GET		/information/license						controllers.information.Information.license()

GET		/manage/system/shutdown						controllers.manage.system.System.shutdown()

GET		/manage/user								controllers.manage.user.Read.index()
POST	/manage/user/read							controllers.manage.user.Read.read()
GET		/manage/user/download						controllers.manage.user.Read.download()
POST	/manage/user/upload							controllers.manage.user.Upload.upload()
POST	/manage/user/create							controllers.manage.user.Edit.create()
POST	/manage/user/update							controllers.manage.user.Edit.update()
POST	/manage/user/delete							controllers.manage.user.Edit.delete()

GET		/manage/company								controllers.manage.company.Read.index()
POST	/manage/company/read						controllers.manage.company.Read.read()
GET		/manage/company/download					controllers.manage.company.Read.download()
POST	/manage/company/upload						controllers.manage.company.Upload.upload()
POST	/manage/company/create						controllers.manage.company.Edit.create()
POST	/manage/company/update						controllers.manage.company.Edit.update()
POST	/manage/company/delete						controllers.manage.company.Edit.delete()

GET		/manage/company/organization/list			controllers.manage.company.organization.list.Read.index(companyId:Long)
POST	/manage/company/organization/list/read		controllers.manage.company.organization.list.Read.read()
GET		/manage/company/organization/list/download	controllers.manage.company.organization.list.Read.download()
POST	/manage/company/organization/list/upload	controllers.manage.company.organization.list.Upload.upload()
POST	/manage/company/organization/list/create	controllers.manage.company.organization.list.Edit.create()
POST	/manage/company/organization/list/update	controllers.manage.company.organization.list.Edit.update()
POST	/manage/company/organization/list/delete	controllers.manage.company.organization.list.Edit.delete()

GET		/manage/company/organization/tree			controllers.manage.company.organization.tree.Read.index(companyId:Long)
POST	/manage/company/organization/tree/update	controllers.manage.company.organization.tree.Edit.update()

#

GET		/development								controllers.development.http.Http.index(state:String ?="ajax")
GET		/development/http							controllers.development.http.Http.index(state:String ?="ajax")
GET		/development/http:state						controllers.development.http.Http.index(state:String)

GET		/development/javascript						controllers.development.javascript.JavaScript.index(item:String ?="test")
GET		/development/javascript:item				controllers.development.javascript.JavaScript.index(item:String)
GET		/development/javascript/test/				controllers.development.javascript.JavaScript.test(testCase:String ?="commonJs")
GET		/development/javascript/test/:testCase		controllers.development.javascript.JavaScript.test(testCase:String)

GET		/development/design							controllers.development.design.Design.index(item:String ?="theme")

GET		/development/document						controllers.development.document.Document.index(type:String ?="troubleshoot")
GET		/development/document:type					controllers.development.document.Document.index(type:String)

GET		/development/help/typography				controllers.development.help.Help.typography()
GET		/development/help/code						controllers.development.help.Help.code()
GET		/development/help/images					controllers.development.help.Help.images()
GET		/development/help/tables					controllers.development.help.Help.tables()
GET		/development/help/figures					controllers.development.help.Help.figures()

GET		/development/help/help						controllers.development.help.Help.help()

GET		/framework									controllers.framework.welcome.Welcome.index()
GET		/framework/welcome							controllers.framework.welcome.Welcome.index()
GET		/framework/defaultpage						controllers.framework.defaultpage.Defaultpage.index()
GET		/framework/defaultpage/:page				controllers.framework.defaultpage.Defaultpage.page(page:String)
+ nocsrf modifier1 modifier2 modifier3
GET		/framework/application						controllers.framework.application.Application.index(state:String ?="configuration")
+ nocsrf modifier1 modifier2 modifier3
GET		/framework/application:state				controllers.framework.application.Application.index(state:String)
GET		/framework/application/playexception		controllers.framework.application.Application.playException()
GET		/framework/application/runtimeexception		controllers.framework.application.Application.runtimeException()
POST	/framework/application/synccache			controllers.framework.application.Application.synccache()
POST	/framework/application/asynccache			controllers.framework.application.Application.asynccache()
GET		/framework/datetime							controllers.framework.datetime.DateTime.index()
POST	/framework/datetime/update					controllers.framework.datetime.DateTime.update()
GET		/framework/mapping							controllers.framework.mapping.Mapping.index()

GET		/environment								controllers.environment.javalang.Java.index(item:String ?="systemproperties")
GET		/environment/java							controllers.environment.javalang.Java.index(item:String ?="systemproperties")
GET		/environment/browser						controllers.environment.browser.Browser.index(item:String ?="navigator")

GET		/bootstrap									controllers.bootstrap.component.Component.index(component:String ?="button")
GET		/bootstrap/component:component				controllers.bootstrap.component.Component.index(component:String)
GET		/bootstrap/layout/:layout					controllers.bootstrap.layout.Layout.index(layout:String)
GET		/bootstrap/ilike							controllers.bootstrap.ilike.ILike.index()

GET		/fontawesome								controllers.fontawesome.style.Style.index(style:String ?="largericon")
GET		/fontawesome/style/:style					controllers.fontawesome.style.Style.index(style:String)

GET		/lab										controllers.lab.library.Library.index(lib:String ?="bootbox")
GET		/lab/library								controllers.lab.library.Library.index(lib:String ?="bootbox")
GET		/lab/library:lib							controllers.lab.library.Library.index(lib:String)
GET		/lab/ui										controllers.lab.ui.UI.index(ui:String ?="drawer")
GET		/lab/ui:ui									controllers.lab.ui.UI.index(ui:String)
GET		/lab/maintenance							controllers.lab.maintenance.Maintenance.master()
POST	/lab/maintenance/detail						controllers.lab.maintenance.Maintenance.detail()
GET		/lab/application							controllers.lab.application.Application.index(state:String ?="autosave")
GET		/lab/application:state						controllers.lab.application.Application.index(state:String)
GET		/lab/application/paging						controllers.lab.application.Application.paging(page:Int, size:Int)
GET		/lab/application/clock/:zoneId				controllers.lab.application.Application.clock(zoneId:String)
GET		/lab/application/download					controllers.lab.application.Download.index()
GET		/lab/application/download/file.txt			controllers.lab.application.Download.file()
GET		/lab/application/download/stream.txt		controllers.lab.application.Download.stream()
GET		/lab/application/download/chunks.txt		controllers.lab.application.Download.chunks()
GET		/lab/application/download/stream.xlsx		controllers.lab.application.Download.excelStream()
GET		/lab/application/download/stream.pdf		controllers.lab.application.Download.pdfStream()
GET		/lab/application/download/report.pdf		controllers.lab.application.Download.reportStream()
GET		/lab/application/upload						controllers.lab.application.Upload.index()
POST	/lab/application/upload/form				controllers.lab.application.Upload.form()
POST	/lab/application/upload/image				controllers.lab.application.Upload.image()
POST	/lab/application/upload/direct				controllers.lab.application.Upload.direct()
GET		/lab/application/websocket					controllers.lab.application.WebSocket.index()
GET		/lab/application/websocket/connection		controllers.lab.application.WebSocket.connect()

GET		/section/work								controllers.section.work.Work.task()
GET		/section/work/task2							controllers.section.work.Work.task2()
POST	/section/work/task2request					controllers.section.work.Work.task2Request()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
#GET     /assets/*file               controllers.Assets.at(path="/public", file)

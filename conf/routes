# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET		/routes.js									controllers.system.System.routes(request: Request)

+ nocsrf
POST	/system/cspreport							apis.system.CSPReport.log(request: Request)
POST	/system/log									apis.system.Logger.log(request: Request)
POST	/system/pdf									apis.system.PDF.index(request: Request)
POST	/system/slide								apis.system.Slide.index(request: Request)
POST	/system/paper								apis.system.Paper.index(request: Request)

GET		/development/http/get						apis.development.http.Http.getData(request: Request)
POST	/development/http/post						apis.development.http.Http.postData(request: Request)

GET		/companies									apis.company.Company.companies(request: Request, name: String, page:Int ?=0, size:Int ?=100)
GET		/company/organizationunits					apis.company.organization.Organization.organizationUnits(request: Request, companyId: Long, name: String, page:Int ?=0, size:Int ?=100)

GET		/translate									apis.transrator.Transrator.translate(request: Request, from: String ?=null, to: String, text:String)

GET		/character									apis.character.Character.character(request: Request, type: String ?="CHARACTER", text:String ?="")

GET		/batch/start/:jobName/:userId				apis.batch.Batch.start(request: Request, jobName: String, userId:String)
GET		/batch/stop/:executionId/:userId			apis.batch.Batch.stop(request: Request, executionId: Long, userId:String)
GET		/batch/restart/:executionId/:userId			apis.batch.Batch.restart(request: Request, executionId: Long, userId:String)
GET		/batch/abandon/:executionId/:userId			apis.batch.Batch.abandon(request: Request, executionId: Long, userId:String)
GET		/batch/jobexecution/:executionId/:userId	apis.batch.Batch.jobExecution(request: Request, executionId: Long, userId:String)

GET		/test										controllers.test.Test.index(request: Request)

GET		/											controllers.user.User.index(request: Request)
GET		/.well-known/change-password				controllers.user.User.index(request: Request)
POST	/signin										controllers.user.User.signIn(request: Request)
GET		/signout									controllers.user.User.signOut(request: Request)
POST	/confirm									controllers.user.User.confirm(request: Request)

GET		/inquiry									controllers.inquiry.Inquiry.index(request: Request)
POST	/inquiry/send								controllers.inquiry.Inquiry.send(request: Request)

GET		/registuser									controllers.registuser.RegistUser.index(request: Request)
POST	/registuser/apply							controllers.registuser.RegistUser.apply(request: Request)
GET		/registuser/provisional/htmlmail			controllers.registuser.RegistUser.provisionalHtmlMail(request: Request, code:String ?="en-US")
GET		/registuser/regular/htmlmail				controllers.registuser.RegistUser.regularHtmlMail(request: Request, code:String ?="en-US")
GET		/registuser/regular/:code					controllers.registuser.RegistUser.regular(request: Request, code:String)

GET		/resetuser									controllers.resetuser.ResetUser.index(request: Request)
POST	/resetuser/apply							controllers.resetuser.ResetUser.apply(request: Request)
GET		/resetuser/request/htmlmail					controllers.resetuser.ResetUser.requestHtmlMail(request: Request, code:String ?="en-US")
GET		/resetuser/owner/:code						controllers.resetuser.ResetUser.owner(request: Request, code:String)
GET		/resetuser/change/htmlmail					controllers.resetuser.ResetUser.changeHtmlMail(request: Request, code:String ?="en-US")
POST	/resetuser/change							controllers.resetuser.ResetUser.change(request: Request)

GET		/home										controllers.home.Home.index(request: Request)
GET		/home/video									controllers.home.Home.video(request: Request)

GET		/setting									controllers.setting.system.System.index(request: Request, item:String ?="general")
GET		/setting/system								controllers.setting.system.System.index(request: Request, item:String ?="general")
GET		/setting/user								controllers.setting.user.User.index(request: Request)
POST	/setting/user/update						controllers.setting.user.User.update(request: Request)
GET		/setting/user/changeuser					controllers.setting.user.ChangeUser.index(request: Request)
POST	/setting/user/changeuser/apply				controllers.setting.user.ChangeUser.apply(request: Request)
GET		/setting/user/changeuser/reserve/htmlmail	controllers.setting.user.ChangeUser.reserveHtmlMail(request: Request, code:String ?="en-US")
GET		/setting/user/changeuser/decision/htmlmail	controllers.setting.user.ChangeUser.decisionHtmlMail(request: Request, code:String ?="en-US")
GET		/setting/user/changeuser/decision/:code		controllers.setting.user.ChangeUser.decision(request: Request, code:String)

GET		/information								controllers.information.Information.creator(request: Request)
GET		/information/creator						controllers.information.Information.creator(request: Request)
GET		/information/license						controllers.information.Information.license(request: Request)

GET		/manage/system/shutdown						controllers.manage.system.System.shutdown(request: Request)

GET		/manage/user								controllers.manage.user.Read.index(request: Request)
POST	/manage/user/read							controllers.manage.user.Read.read(request: Request)
GET		/manage/user/download						controllers.manage.user.Read.download(request: Request)
POST	/manage/user/upload							controllers.manage.user.Upload.upload(request: Request)
POST	/manage/user/create							controllers.manage.user.Edit.create(request: Request)
POST	/manage/user/update							controllers.manage.user.Edit.update(request: Request)
POST	/manage/user/delete							controllers.manage.user.Edit.delete(request: Request)

GET		/manage/company								controllers.manage.company.Read.index(request: Request)
POST	/manage/company/read						controllers.manage.company.Read.read(request: Request)
GET		/manage/company/download					controllers.manage.company.Read.download(request: Request)
POST	/manage/company/upload						controllers.manage.company.Upload.upload(request: Request)
POST	/manage/company/create						controllers.manage.company.Edit.create(request: Request)
POST	/manage/company/update						controllers.manage.company.Edit.update(request: Request)
POST	/manage/company/delete						controllers.manage.company.Edit.delete(request: Request)

GET		/manage/company/organization/list			controllers.manage.company.organization.list.Read.index(request: Request, companyId:Long)
POST	/manage/company/organization/list/read		controllers.manage.company.organization.list.Read.read(request: Request)
GET		/manage/company/organization/list/download	controllers.manage.company.organization.list.Read.download(request: Request)
POST	/manage/company/organization/list/upload	controllers.manage.company.organization.list.Upload.upload(request: Request)
POST	/manage/company/organization/list/create	controllers.manage.company.organization.list.Edit.create(request: Request)
POST	/manage/company/organization/list/update	controllers.manage.company.organization.list.Edit.update(request: Request)
POST	/manage/company/organization/list/delete	controllers.manage.company.organization.list.Edit.delete(request: Request)

GET		/manage/company/organization/tree			controllers.manage.company.organization.tree.Read.index(request: Request, companyId:Long)
POST	/manage/company/organization/tree/update	controllers.manage.company.organization.tree.Edit.update(request: Request)

GET		/manage/batch								controllers.manage.batch.Batch.index(request: Request)

#

GET		/development								controllers.development.http.Http.index(request: Request, state:String ?="ajax")
GET		/development/http							controllers.development.http.Http.index(request: Request, state:String ?="ajax")
GET		/development/http:state						controllers.development.http.Http.index(request: Request, state:String)

GET		/development/javascript						controllers.development.javascript.JavaScript.index(request: Request, item:String ?="test")
GET		/development/javascript:item				controllers.development.javascript.JavaScript.index(request: Request, item:String)
GET		/development/javascript/test/				controllers.development.javascript.JavaScript.test(request: Request, testCase:String ?="commonJs")
GET		/development/javascript/test/:testCase		controllers.development.javascript.JavaScript.test(request: Request, testCase:String)

GET		/development/design							controllers.development.design.Design.index(request: Request, item:String ?="theme")

GET		/development/document						controllers.development.document.Document.index(request: Request, type:String ?="troubleshoot")
GET		/development/document:type					controllers.development.document.Document.index(request: Request, type:String)

GET		/development/help/typography				controllers.development.help.Help.typography(request: Request)
GET		/development/help/code						controllers.development.help.Help.code(request: Request)
GET		/development/help/images					controllers.development.help.Help.images(request: Request)
GET		/development/help/tables					controllers.development.help.Help.tables(request: Request)
GET		/development/help/figures					controllers.development.help.Help.figures(request: Request)

GET		/development/help/help						controllers.development.help.Help.help(request: Request)

GET		/framework									controllers.framework.welcome.Welcome.index(request: Request)
GET		/framework/welcome							controllers.framework.welcome.Welcome.index(request: Request)
GET		/framework/defaultpage						controllers.framework.defaultpage.Defaultpage.index(request: Request)
GET		/framework/defaultpage/:page				controllers.framework.defaultpage.Defaultpage.page(request: Request, page:String)
+ nocsrf modifier1 modifier2 modifier3
GET		/framework/application						controllers.framework.application.Application.index(request: Request, state:String ?="config")
+ nocsrf modifier1 modifier2 modifier3
GET		/framework/application:state				controllers.framework.application.Application.index(request: Request, state:String)
GET		/framework/application/playexception		controllers.framework.application.Application.playException(request: Request)
GET		/framework/application/runtimeexception		controllers.framework.application.Application.runtimeException(request: Request)
POST	/framework/application/synccache			controllers.framework.application.Application.synccache(request: Request)
POST	/framework/application/asynccache			controllers.framework.application.Application.asynccache(request: Request)
GET		/framework/datetime							controllers.framework.datetime.DateTime.index(request: Request)
POST	/framework/datetime/update					controllers.framework.datetime.DateTime.update(request: Request)
GET		/framework/strictdatetime					controllers.framework.strictdatetime.DateTime.index(request: Request)
POST	/framework/strictdatetime/update			controllers.framework.strictdatetime.DateTime.update(request: Request)
POST	/framework/strictdatetime/times				controllers.framework.strictdatetime.DateTime.times(request: Request)
GET		/framework/beantype							controllers.framework.beantype.Mapping.index(request: Request)
GET		/framework/entitytype						controllers.framework.entitytype.Mapping.index(request: Request)

GET		/environment								controllers.environment.openjdk.OpenJDK.index(request: Request, item:String ?="systemproperties")
GET		/environment/openjdk						controllers.environment.openjdk.OpenJDK.index(request: Request, item:String ?="systemproperties")
GET		/environment/browser						controllers.environment.browser.Browser.index(request: Request, item:String ?="navigator")

GET		/bootstrap									controllers.bootstrap.component.Component.index(request: Request, component:String ?="button")
GET		/bootstrap/component:component				controllers.bootstrap.component.Component.index(request: Request, component:String)
GET		/bootstrap/layout/:layout					controllers.bootstrap.layout.Layout.index(request: Request, layout:String)

GET		/fontawesome								controllers.fontawesome.style.Style.index(request: Request, style:String ?="largericon")
GET		/fontawesome/style/:style					controllers.fontawesome.style.Style.index(request: Request, style:String)

GET		/lab										controllers.lab.library.Library.index(request: Request, lib:String ?="bootbox")
GET		/lab/library								controllers.lab.library.Library.index(request: Request, lib:String ?="bootbox")
GET		/lab/library:lib							controllers.lab.library.Library.index(request: Request, lib:String)
GET		/lab/library/pdfjs/:pdf						controllers.lab.library.Library.pdfjs(request: Request, pdf:String)
GET		/lab/library/revealjs/:slide				controllers.lab.library.Library.revealjs(request: Request, slide:String)
GET		/lab/library/papercss/:paper				controllers.lab.library.Library.papercss(request: Request, paper:String)
GET		/lab/ui										controllers.lab.ui.UI.index(request: Request, ui:String ?="drawer")
GET		/lab/ui:ui									controllers.lab.ui.UI.index(request: Request, ui:String)
GET		/lab/ilike									controllers.lab.ilike.ILike.index(request: Request, state:String ?="list", detail:Boolean ?=false)
GET		/lab/ilike/:state/:detail					controllers.lab.ilike.ILike.index(request: Request, state:String, detail:Boolean)
GET		/lab/page									controllers.lab.page.Page.index(request: Request, page:String ?="landing")
GET		/lab/page:page								controllers.lab.page.Page.index(request: Request, page:String)
GET		/lab/maintenance							controllers.lab.maintenance.Maintenance.master(request: Request)
POST	/lab/maintenance/detail						controllers.lab.maintenance.Maintenance.detail(request: Request)
GET		/lab/application							controllers.lab.application.Application.index(request: Request, state:String ?="autosave")
GET		/lab/application:state						controllers.lab.application.Application.index(request: Request, state:String)
GET		/lab/application/paging						controllers.lab.application.Application.paging(request: Request, page:Int, size:Int)
GET		/lab/application/download					controllers.lab.application.Download.index(request: Request)
GET		/lab/application/download/file.txt			controllers.lab.application.Download.file(request: Request)
GET		/lab/application/download/stream.txt		controllers.lab.application.Download.stream(request: Request)
GET		/lab/application/download/chunks.txt		controllers.lab.application.Download.chunks(request: Request)
GET		/lab/application/download/stream.xlsx		controllers.lab.application.Download.excelStream(request: Request)
GET		/lab/application/download/stream.docx		controllers.lab.application.Download.wordStream(request: Request)
GET		/lab/application/download/stream.pptx		controllers.lab.application.Download.powerPointStream(request: Request)
GET		/lab/application/download/pdfbox.pdf		controllers.lab.application.Download.pdfboxStream(request: Request)
GET		/lab/application/download/report.pdf		controllers.lab.application.Download.reportPdfStream(request: Request)
GET		/lab/application/download/report.docx		controllers.lab.application.Download.reportWordStream(request: Request)
GET		/lab/application/download/report.xlsx		controllers.lab.application.Download.reportExcelStream(request: Request)
GET		/lab/application/download/report.pptx		controllers.lab.application.Download.reportPowerpointStream(request: Request)
GET		/lab/application/download/files.zip			controllers.lab.application.Download.zipStream(request: Request)
GET		/lab/application/download/encryptfiles.zip	controllers.lab.application.Download.encryptZipStream(request: Request)
GET		/lab/application/download/puppeteer.pdf		controllers.lab.application.Download.puppeteerPdfStream(request: Request)
GET		/lab/application/download/filename			controllers.lab.application.Download.fileName(request: Request)
GET		/lab/application/download/:urlfilename		controllers.lab.application.Download.urlFileName(request: Request, urlfilename: String)
GET		/lab/application/upload						controllers.lab.application.Upload.index(request: Request)
POST	/lab/application/upload/form				controllers.lab.application.Upload.form(request: Request)
POST	/lab/application/upload/image				controllers.lab.application.Upload.image(request: Request)
POST	/lab/application/upload/direct				controllers.lab.application.Upload.direct(request: Request)
GET		/lab/application/bulkmail					controllers.lab.application.BulkMail.index(request: Request)
POST	/lab/application/bulkmail/send				controllers.lab.application.BulkMail.send(request: Request)
GET		/lab/application/sms						controllers.lab.application.SMS.index(request: Request)
POST	/lab/application/sms/send					controllers.lab.application.SMS.send(request: Request)
GET		/lab/application/websocket					controllers.lab.application.WebSocket.index(request: Request)
GET		/lab/application/websocket/connection		controllers.lab.application.WebSocket.connect()
GET		/lab/application/chat						controllers.lab.application.Chat.index(request: Request)
GET		/lab/application/chat/enter					controllers.lab.application.Chat.enter()

GET		/section/work								controllers.section.work.Work.task(request: Request)
GET		/section/work/task2							controllers.section.work.Work.task2(request: Request)
POST	/section/work/task2request					controllers.section.work.Work.task2Request(request: Request)
GET		/section/work/task3							controllers.section.work.Work.task3(request: Request)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
